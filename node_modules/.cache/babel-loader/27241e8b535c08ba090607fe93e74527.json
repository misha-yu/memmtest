{"ast":null,"code":"import _classCallCheck from \"/Users/mikhailyurchenkov/Documents/GitHub/memmtest-simpleResux/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mikhailyurchenkov/Documents/GitHub/memmtest-simpleResux/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mikhailyurchenkov/Documents/GitHub/memmtest-simpleResux/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mikhailyurchenkov/Documents/GitHub/memmtest-simpleResux/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/mikhailyurchenkov/Documents/GitHub/memmtest-simpleResux/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/mikhailyurchenkov/Documents/GitHub/memmtest-simpleResux/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mikhailyurchenkov/Documents/GitHub/memmtest-simpleResux/src/components/check_tokens/Check_tokens.js\";\nimport React from 'react';\n\nvar Сheck_tokens =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Сheck_tokens, _React$Component);\n\n  function Сheck_tokens(props) {\n    var _this;\n\n    _classCallCheck(this, Сheck_tokens);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Сheck_tokens).call(this));\n    var InitialTokensList = [\"Token #19809870987098790\", \"Token #19809870987098791\", \"Token #19809870987098792\", \"Token #19809870987098793\"];\n    _this.state = {// tokensList: InitialTokensList\n    };\n    _this.onChangeFn = _this.onChangeFn.bind(_assertThisInitialized(_this)); // надо прикрепить функцию к конструктору \n\n    return _this;\n  }\n\n  _createClass(Сheck_tokens, [{\n    key: \"onChangeFn\",\n    value: function onChangeFn(e) {\n      if (e.key === 'Enter') {\n        // тут мы можем получать данные с сервера\n        //this.state.tokensList.push(e.target.value);\n        // очищаем val для input\n        //e.target.value = '';\n        // Устанавливаем State для компонента\n        //this.setState({\n        // tokensList: this.state.tokensList\n        //})\n        console.log('BZZZZZ = ' + this.props.Tokens_store);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col second_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"CHECK TOKEN ADDRESS\")), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"check_iput\",\n        className: \"input_style\",\n        onKeyPress: this.onChangeFn,\n        placeholder: \"Add blockchain adress here\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col tokens_list_style\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Сheck_tokens;\n}(React.Component);\n\n; //Сheck_tokens.propTypes = {\n//tokensElement:''\n//}\n//{this.state.tokensList.map((tokensElement, i) => \n// <li key={i}>{tokensElement}</li>\n//)}\n\nexport default Сheck_tokens;","map":{"version":3,"sources":["/Users/mikhailyurchenkov/Documents/GitHub/memmtest-simpleResux/src/components/check_tokens/Check_tokens.js"],"names":["React","Сheck_tokens","props","InitialTokensList","state","onChangeFn","bind","e","key","console","log","Tokens_store","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,Y;;;;;AAEJ,wBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB;AAEA,QAAIC,iBAAiB,GAAG,CACpB,0BADoB,EAEpB,0BAFoB,EAGpB,0BAHoB,EAIpB,0BAJoB,CAAxB;AAOA,UAAKC,KAAL,GAAY,CACX;AADW,KAAZ;AAIA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,+BAAlB,CAdgB,CAc8B;;AAd9B;AAejB;;;;+BAEWC,C,EAAG;AACb,UAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrB;AACA;AACA;AACD;AACC;AACA;AACC;AACD;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAY,KAAKR,KAAL,CAAWS,YAAnC;AAGD;AACF;;;6BAEQ;AAKP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACU;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADV,CADA,EAIQ;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,EAAE,EAAC,YAAV;AAAuB,QAAA,SAAS,EAAC,aAAjC;AAA+C,QAAA,UAAU,EAAE,KAAKN,UAAhE;AAA4E,QAAA,WAAW,EAAC,4BAAxF;AAAqH,QAAA,IAAI,EAAC,MAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CAJR,EASQ;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CATR,CADF;AAoBD;;;;EA5DwBL,KAAK,CAACY,S;;AA6DhC,C,CAED;AACA;AACA;AAEA;AACC;AACD;;AAEA,eAAeX,YAAf","sourcesContent":["import React from 'react';\n\nclass Сheck_tokens extends React.Component {\n\n  constructor(props){\n    super();\n\n    let InitialTokensList = [\n        \"Token #19809870987098790\",\n        \"Token #19809870987098791\",\n        \"Token #19809870987098792\",\n        \"Token #19809870987098793\"\n      ];\n\n    this.state= {\n     // tokensList: InitialTokensList\n    };\n\n    this.onChangeFn = this.onChangeFn.bind(this); // надо прикрепить функцию к конструктору \n  }\n\n  onChangeFn (e) {\n    if (e.key === 'Enter') {\n      // тут мы можем получать данные с сервера\n      //this.state.tokensList.push(e.target.value);\n      // очищаем val для input\n     //e.target.value = '';\n      // Устанавливаем State для компонента\n      //this.setState({\n       // tokensList: this.state.tokensList\n      //})\n      console.log('BZZZZZ = '+this.props.Tokens_store);\n\n      \n    }\n  }\n\n  render() {\n\n    \n\n   \n    return (\n      <div>\n      <div className=\"row\">\n                <div className=\"col second_title\">CHECK TOKEN ADDRESS</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col\">\n                  <input id=\"check_iput\" className=\"input_style\" onKeyPress={this.onChangeFn} placeholder=\"Add blockchain adress here\" type=\"text\" />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col tokens_list_style\">\n                  <ul>\n                   \n                  </ul>\n                </div>\n              </div>\n      </div>  \n    );\n    \n  }\n}; \n\n//Сheck_tokens.propTypes = {\n//tokensElement:''\n//}\n\n//{this.state.tokensList.map((tokensElement, i) => \n // <li key={i}>{tokensElement}</li>\n//)}\n\nexport default Сheck_tokens;"]},"metadata":{},"sourceType":"module"}