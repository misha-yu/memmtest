{"map":"{\"version\":3,\"sources\":[\"/Users/mikhailyurchenkov/Documents/GitHub/memmtest/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/Users/mikhailyurchenkov/Documents/GitHub/memmtest/src/logo.svg\",\"/Users/mikhailyurchenkov/Documents/GitHub/memmtest/src/App.js\",\"/Users/mikhailyurchenkov/Documents/GitHub/memmtest/src/serviceWorker.js\",\"/Users/mikhailyurchenkov/Documents/GitHub/memmtest/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"App\",\"state\",\"products\",\"product\",\"name\",\"price\",\"server_urll\",\"getProducts\",\"_\",\"fetch\",\"then\",\"response\",\"json\",\"_this\",\"setState\",\"data\",\"catch\",\"err\",\"console\",\"error\",\"addProduct\",\"concat\",\"renderProduct\",\"_ref\",\"product_id\",\"react_default\",\"a\",\"createElement\",\"key\",\"this\",\"_this2\",\"_this$state\",\"className\",\"map\",\"value\",\"onChange\",\"e\",\"Object\",\"objectSpread\",\"target\",\"onClick\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oLCyDzBC,0NAnDfC,MAAS,CACPC,SAAW,GACXC,QAAS,CACPC,KAAM,iBACNC,MAAO,OASXC,YAAc,sCAEdC,YAAc,SAAAC,GACZC,MAAM,8CACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GAAQ,OAAIE,EAAKC,SAAS,CAAEZ,SAAUS,EAASI,SACpDC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,QAG9BG,WAAa,SAAAZ,GAAK,IACTL,EAAWU,EAAKZ,MAAhBE,QACPM,MAAK,uDAAAY,OAAwDlB,EAAQC,KAAhE,WAAAiB,OAA8ElB,EAAQE,QAC1FK,KAAKG,EAAKN,aACVS,MAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,QAG5BK,cAAgB,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,WAAYpB,EAAdmB,EAAcnB,KAAd,OAAwBqB,EAAAC,EAAAC,cAAA,MAAA,CAAKC,IAAKJ,GAAapB,uFApB/DyB,KAAKtB,+CAsBI,IAAAuB,EAAAD,KAAAE,EACqBF,KAAK5B,MAA1BC,EADA6B,EACA7B,SAAUC,EADV4B,EACU5B,QACjB,OACEsB,EAAAC,EAAAC,cAAA,MAAA,CAAKK,UAAU,OACZ9B,EAAS+B,IAAIJ,KAAKP,eACnBG,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAAA,QAAA,CACAO,MAAO/B,EAAQC,KACf+B,SAAW,SAAAC,GAAC,OAAIN,EAAKhB,SAAS,CAAEX,QAAQkC,OAAAC,EAAA,EAAAD,CAAA,GAAKlC,EAAN,CAAeC,KAAMgC,EAAEG,OAAOL,aACrET,EAAAC,EAAAC,cAAA,QAAA,CACAO,MAAO/B,EAAQE,MACf8B,SAAW,SAAAC,GAAC,OAAIN,EAAKhB,SAAS,CAAEX,QAAQkC,OAAAC,EAAA,EAAAD,CAAA,GAAKlC,EAAN,CAAeE,MAAO+B,EAAEG,OAAOL,aAEtET,EAAAC,EAAAC,cAAA,SAAA,CAAQa,QAASX,KAAKT,YAAtB,wBA9CQqB,EAAAA,YCQEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOvB,EAAAC,EAAAC,cAACsB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5C,KAAK,SAAA6C,GACjCA,EAAaC\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import React, { Component } from 'react';\\nimport logo from './logo.svg';\\nimport './App.css';\\n\\nclass App extends Component {\\n\\nstate  = {\\n  products : [],\\n  product: {\\n    name: 'sample product',\\n    price: 20\\n  }\\n}\\n\\ncomponentDidMount(){\\n  this.getProducts();\\n}\\n\\n//server_urll = \\\"http://localhost:5000\\\";\\nserver_urll = \\\"https://memm-heroku.herokuapp.com\\\";\\n\\ngetProducts = _ => {\\n  fetch('https://memm-heroku.herokuapp.com/products')\\n  .then(response => response.json())\\n  .then(response => this.setState({ products: response.data }))\\n  .catch(err => console.error(err))\\n  }\\n\\naddProduct = _ => {\\n  const {product} = this.state;\\n  fetch(`https://memm-heroku.herokuapp.com/products/add?name=${product.name}&price=${product.price}`)\\n  .then(this.getProducts)\\n  .catch(err => console.error(err))\\n}\\n\\n  renderProduct = ({product_id, name}) => <div key={product_id}>{name}</div>\\n\\n  render() {\\n    const {products, product} = this.state;\\n    return (\\n      <div className=\\\"App\\\">\\n        {products.map(this.renderProduct)}\\n        <div>\\n          <input \\n          value={product.name} \\n          onChange={ e => this.setState({ product: {...product, name: e.target.value} })}/>\\n          <input \\n          value={product.price} \\n          onChange={ e => this.setState({ product: {...product, price: e.target.value} })}\\n          />\\n          <button onClick={this.addProduct}>ADD PRODUCT</button>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{15:function(t,e,n){},16:function(t,e,n){t.exports=n.p+\"static/media/logo.5d5d9eef.svg\"},17:function(t,e,n){},18:function(t,e,n){\"use strict\";n.r(e);var r=n(0),o=n.n(r),c=n(3),a=n.n(c),u=(n(15),n(1)),i=n(4),s=n(5),d=n(7),p=n(6),m=n(8),l=(n(16),n(17),function(t){function e(){var t,n;Object(i.a)(this,e);for(var r=arguments.length,c=new Array(r),a=0;a<r;a++)c[a]=arguments[a];return(n=Object(d.a)(this,(t=Object(p.a)(e)).call.apply(t,[this].concat(c)))).state={products:[],product:{name:\"sample product\",price:20}},n.server_urll=\"https://memm-heroku.herokuapp.com\",n.getProducts=function(t){fetch(\"https://memm-heroku.herokuapp.com/products\").then(function(t){return t.json()}).then(function(t){return n.setState({products:t.data})}).catch(function(t){return console.error(t)})},n.addProduct=function(t){var e=n.state.product;fetch(\"https://memm-heroku.herokuapp.com/products/add?name=\".concat(e.name,\"&price=\").concat(e.price)).then(n.getProducts).catch(function(t){return console.error(t)})},n.renderProduct=function(t){var e=t.product_id,n=t.name;return o.a.createElement(\"div\",{key:e},n)},n}return Object(m.a)(e,t),Object(s.a)(e,[{key:\"componentDidMount\",value:function(){this.getProducts()}},{key:\"render\",value:function(){var t=this,e=this.state,n=e.products,r=e.product;return o.a.createElement(\"div\",{className:\"App\"},n.map(this.renderProduct),o.a.createElement(\"div\",null,o.a.createElement(\"input\",{value:r.name,onChange:function(e){return t.setState({product:Object(u.a)({},r,{name:e.target.value})})}}),o.a.createElement(\"input\",{value:r.price,onChange:function(e){return t.setState({product:Object(u.a)({},r,{price:e.target.value})})}}),o.a.createElement(\"button\",{onClick:this.addProduct},\"ADD PRODUCT\")))}}]),e}(r.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));a.a.render(o.a.createElement(l,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(t){t.unregister()})},9:function(t,e,n){t.exports=n(18)}},[[9,1,2]]]);","extractedComments":[]}